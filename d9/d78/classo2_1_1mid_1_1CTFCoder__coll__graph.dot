digraph "o2::mid::CTFCoder"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{o2::mid::CTFCoder\n||+ CTFCoder()\l+ ~CTFCoder()\l+ encode()\l+ decode()\l+ createCoders()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{o2::ctf::CTFCoderBase\n||+ CTFCoderBase()\l+ CTFCoderBase()\l+ loadDictionaryTreeFile()\l+ readDictionaryFromFile()\l+ createCoder()\l+ clear()\l# getPrefix()\l# ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$d1/db7/classo2_1_1ctf_1_1CTFCoderBase.html"];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #mDet" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{o2::detectors::DetID\n|+ ITS\l+ TOF\l+ PHS\l+ CPV\l+ EMC\l+ HMP\l+ MFT\l+ MID\l+ ZDC\l+ Last\l|+ DetID()\l+ DetID()\l+ DetID()\l+ operator=()\l+ getID()\l+ getMask()\l+ getDataOrigin()\l+ getName()\l+ operator int()\l+ DetID()\l+ getNDetectors()\l+ getName()\l+ getMask()\l+ getDataOrigin()\l+ getMask()\l+ getNames()\l}",height=0.2,width=0.4,color="black",URL="$d6/dd5/classo2_1_1detectors_1_1DetID.html",tooltip="Static class with identifiers, bitmasks and names for ALICE detectors. "];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +ACO\n+NONE\n+First\n+MCH\n+FV0\n+FT0\n+FDD\n+TRD\n+nDetectors\n+TPC\n..." ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{static\n||}",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #mCoders" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{vector\< std::shared\l_ptr\< void \> \>\n||}",height=0.2,width=0.4,color="grey75"];
}

<map id="o2::header::BaseHeader" name="o2::header::BaseHeader">
<area shape="rect" id="node2" href="$d0/ddd/structo2_1_1cpv_1_1CPVBlockHeader.html" title="Header for CPV flagging the following CPV payload. " alt="" coords="5,629,191,736"/>
<area shape="rect" id="node3" href="$d3/d13/structo2_1_1emcal_1_1EMCALBlockHeader.html" title="Header for EMCAL flagging the following EMCAL payload. " alt="" coords="215,629,437,736"/>
<area shape="rect" id="node4" href="$d7/df0/structo2_1_1framework_1_1DataProcessingHeader.html" title="{o2::framework::DataProcessing\lHeader\n|+ startTime\l+ duration\l+ creation\l+ sHeaderType\l+ sVersion\l|+ DataProcessingHeader()\l+ DataProcessingHeader()\l+ DataProcessingHeader()\l+ DataProcessingHeader()\l+ getCreationTime()\l+ Get()\l}" alt="" coords="461,571,687,795"/>
<area shape="rect" id="node5" href="$db/df3/structo2_1_1framework_1_1OutputObjHeader.html" title="O2 header for OutputObj metadata. " alt="" coords="712,593,903,773"/>
<area shape="rect" id="node6" href="$d0/d7a/structo2_1_1framework_1_1SourceInfoHeader.html" title="a BaseHeader with state information from the source " alt="" coords="927,607,1122,758"/>
<area shape="rect" id="node7" href="$db/d87/structo2_1_1header_1_1DataHeader.html" title="the main header struct " alt="" coords="1146,483,1365,883"/>
<area shape="rect" id="node8" href="$d4/dfa/structo2_1_1header_1_1HeartbeatFrameEnvelope.html" title="{o2::header::HeartbeatFrame\lEnvelope\n|+ header\l+ trailer\l+ sVersion\l+ sHeaderType\l+ sSerializationMethod\l|+ HeartbeatFrameEnvelope()\l+ HeartbeatFrameEnvelope()\l}" alt="" coords="1389,600,1601,765"/>
<area shape="rect" id="node9" href="$d2/dda/structo2_1_1header_1_1NameHeader.html" title="an example data header containing a name of an object as a null terminated char arr. this is a template! at instantiation the template parameter determines the size of the held string array. a caveat with decoding is (if length of string is not known) you have to use header::get&lt;NameHeader&lt;0&gt;&gt;(buffer) to get it out of a buffer. May improve in the future if enough people complain. If the compiler decides to pad the end of struct, the length of padding is stored in the last byte " alt="" coords="1625,593,1851,773"/>
<area shape="rect" id="node10" href="$da/d75/structo2_1_1header_1_1test_1_1MetaHeader.html" title="{o2::header::test::MetaHeader\n|+ secret\l+ sHeaderType\l+ sVersion\l|+ MetaHeader()\l}" alt="" coords="1874,629,2085,736"/>
<area shape="rect" id="node11" href="$d2/d84/structo2_1_1phos_1_1PHOSBlockHeader.html" title="Header for PHOS flagging the following PHOS payload. " alt="" coords="2109,629,2313,736"/>
<area shape="rect" id="node12" href="$d4/da3/structo2_1_1tpc_1_1TPCSectorHeader.html" title="{o2::tpc::TPCSectorHeader\n|+ sectorBits\l+ activeSectorsFlags\l+ activeSectors\l+ unused\l+ flags\l+ @36\l+ sHeaderType\l+ sVersion\l+ NSectors\l|+ TPCSectorHeader()\l+ sector()\l}" alt="" coords="2338,578,2525,787"/>
<area shape="rect" id="node13" href="$d0/d92/structo2_1_1utilities_1_1DataSamplingHeader.html" title="{o2::utilities::DataSampling\lHeader\n|+ sampleTimeUs\l+ totalAcceptedMessages\l+ totalEvaluatedMessages\l+ deviceID\l+ sVersion\l+ sHeaderType\l+ sSerializationMethod\l+ deviceIDTypeSize\l|+ DataSamplingHeader()\l+ DataSamplingHeader()\l+ DataSamplingHeader()\l+ operator=()\l+ Get()\l}" alt="" coords="2549,556,2745,809"/>
<area shape="rect" id="node14" href="$dc/d68/structtest_1_1MetaHeader.html" title="{test::MetaHeader\n|+ secret\l+ sHeaderType\l+ sVersion\l|+ MetaHeader()\l}" alt="" coords="2769,629,2904,736"/>
</map>

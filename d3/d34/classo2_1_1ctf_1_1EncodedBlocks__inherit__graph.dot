digraph "o2::ctf::EncodedBlocks&lt; H, N, W &gt;"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{o2::ctf::EncodedBlocks\l\< H, N, W \>\n|# mRegistry\l# mANSHeader\l# mHeader\l# mMetadata\l# mBlocks\l|+ setHeader()\l+ getHeader()\l+ getHeader()\l+ cloneHeader()\l+ getMetadata()\l+ getMetadata()\l+ getBlock()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l+ createDictionaryBlocks()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="orange",fontsize="10",style="solid",label=" \< CTFHeader, 10, uint32_t \>" ,fontname="Helvetica"];
  Node1 [label="{o2::ctf::EncodedBlocks\l\< CTFHeader, 10, uint32_t \>\n|# mRegistry\l# mANSHeader\l# mHeader\l# mMetadata\l# mBlocks\l|+ setHeader()\l+ getHeader()\l+ getHeader()\l+ cloneHeader()\l+ getMetadata()\l+ getMetadata()\l+ getBlock()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l+ createDictionaryBlocks()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black",URL="$dc/d08/classo2_1_1ctf_1_1EncodedBlocks.html"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{o2::itsmft::CTF\n|+ N\l|+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$d5/dac/structo2_1_1itsmft_1_1CTF.html",tooltip="wrapper for the Entropy-encoded clusters of the TF "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{o2::tof::CTF\n|+ N\l|+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$d7/d5b/structo2_1_1tof_1_1CTF.html",tooltip="wrapper for the Entropy-encoded clusters of the TF "];
  Node0 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< CTFHeader, 6, uint32_t \>" ,fontname="Helvetica"];
  Node4 [label="{o2::ctf::EncodedBlocks\l\< CTFHeader, 6, uint32_t \>\n|# mRegistry\l# mANSHeader\l# mHeader\l# mMetadata\l# mBlocks\l|+ setHeader()\l+ getHeader()\l+ getHeader()\l+ cloneHeader()\l+ getMetadata()\l+ getMetadata()\l+ getBlock()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l+ createDictionaryBlocks()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black",URL="$dc/d08/classo2_1_1ctf_1_1EncodedBlocks.html"];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{o2::fv0::CTF\n|+ N\l|+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$d1/d16/structo2_1_1fv0_1_1CTF.html",tooltip="wrapper for the Entropy-encoded clusters of the TF "];
  Node0 -> Node6 [dir="back",color="orange",fontsize="10",style="solid",label=" \< CTFHeader, 7, uint32_t \>" ,fontname="Helvetica"];
  Node6 [label="{o2::ctf::EncodedBlocks\l\< CTFHeader, 7, uint32_t \>\n|# mRegistry\l# mANSHeader\l# mHeader\l# mMetadata\l# mBlocks\l|+ setHeader()\l+ getHeader()\l+ getHeader()\l+ cloneHeader()\l+ getMetadata()\l+ getMetadata()\l+ getBlock()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l+ createDictionaryBlocks()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black",URL="$dc/d08/classo2_1_1ctf_1_1EncodedBlocks.html"];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{o2::mid::CTF\n|+ N\l|+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$d6/d3c/structo2_1_1mid_1_1CTF.html",tooltip="wrapper for the Entropy-encoded clusters of the TF "];
  Node0 -> Node8 [dir="back",color="orange",fontsize="10",style="solid",label=" \< CTFHeader, 8, uint32_t \>" ,fontname="Helvetica"];
  Node8 [label="{o2::ctf::EncodedBlocks\l\< CTFHeader, 8, uint32_t \>\n|# mRegistry\l# mANSHeader\l# mHeader\l# mMetadata\l# mBlocks\l|+ setHeader()\l+ getHeader()\l+ getHeader()\l+ cloneHeader()\l+ getMetadata()\l+ getMetadata()\l+ getBlock()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l+ createDictionaryBlocks()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black",URL="$dc/d08/classo2_1_1ctf_1_1EncodedBlocks.html"];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{o2::ft0::CTF\n|+ N\l|+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$dc/dd3/structo2_1_1ft0_1_1CTF.html",tooltip="wrapper for the Entropy-encoded clusters of the TF "];
  Node0 -> Node10 [dir="back",color="orange",fontsize="10",style="solid",label=" \< CTFHeader, 23, uint32_t \>" ,fontname="Helvetica"];
  Node10 [label="{o2::ctf::EncodedBlocks\l\< CTFHeader, 23, uint32_t \>\n|# mRegistry\l# mANSHeader\l# mHeader\l# mMetadata\l# mBlocks\l|+ setHeader()\l+ getHeader()\l+ getHeader()\l+ cloneHeader()\l+ getMetadata()\l+ getMetadata()\l+ getBlock()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l+ createDictionaryBlocks()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black",URL="$dc/d08/classo2_1_1ctf_1_1EncodedBlocks.html"];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{o2::tpc::CTF\n|+ N\l+ NBitsQTot\l+ NBitsQMax\l+ NBitsSigmaPad\l+ NBitsSigmaTime\l+ NBitsRowDiff\l+ NBitsSliceLegDiff\l|+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$df/d41/structo2_1_1tpc_1_1CTF.html",tooltip="wrapper for the Entropy-encoded clusters of the TF "];
}
